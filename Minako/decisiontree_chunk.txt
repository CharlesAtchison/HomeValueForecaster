### Decision Tree
```{r decisiont}
### This model will find the affordable housing, which is below 200,000
train_df_dec <- train_df_logis
test_df_dec <- test_df_logis
# create categorical response variable. 1=higher than 200,000, 0=lower than 200,000
train_df_dec$price_low <- 1
train_df_dec[train_df_dec$price > 200000,]$price_low <- 0
train_df_dec$price_low <- as.factor(train_df_dec$price_low)
table(train_df_dec$price_low)
test_df_dec$price_low <- 1
test_df_dec[test_df_dec$price > 200000,]$price_low <- 0
test_df_dec$price_low <- as.factor(test_df_dec$price_low)
table(test_df_dec$price_low)


train_df_dec <- train_df_dec[ , -which(names(train_df_dec) %in% c("price", "price_cat"))]
test_df_dec <- test_df_dec[ , -which(names(test_df_dec) %in% c("price", "price_cat"))]

library(C50)
price_model <- C5.0(train_df_dec[,-42], train_df_dec$price_low)
#The price_model object now contains a C5.0 decision tree.
price_model
summary(price_model)

plot(price_model)

#evaluating model performance
price_pred <- predict(price_model, test_df_dec)
library(gmodels)
CrossTable(test_df_dec$price_low, price_pred,
           prop.chisq = FALSE, prop.c = FALSE, prop.r = FALSE, 
           dnn = c('actual default', 'predicted default'))

# Boosting
price_boost10 <- C5.0(train_df_dec[,-42], train_df_dec$price_low,trials = 10)
summary(price_boost10)

```